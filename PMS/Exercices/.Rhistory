help(rnorm)
x <- rnorm(1000, mean=2)
hist(x)
density(x)
help("hist")
hist(x, density=2)
help("hist")
curve(x)
densityPlot(x)
dens <- density(x)
plot(dens, frame = FALSE, col = "steelblue",
main = "Density plot of x")
c
dens <- density(x)
plot(dens)
plot(hist(x), dens)
lines(x, y, col = "red")
y <- with(x, dnorm(x, mean(parent), sd(parent)))
y <- with(x, dnorm(x, mean(x), sd(x)))
y <- with(x, rnorm(x, mean(x), sd(x)))
y <- rnorm(1000, mean=2)
lines(x, y, col = "red")
plot(dens)
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
xfit <- seq(min(x),max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
h <- hist(x, breaks=10, col="red")
xfit <- seq(min(x),max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
x <- rnorm(20, mean=2)
# hist(x)
# Compute the density data
# dens <- density(x)
# plot density
# plot(dens)
# Superpose histogram and density plot
h <- hist(x, breaks=10, col="red")
xfit <- seq(min(x), max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
x <- rnorm(20, mean=2)
# hist(x)
# Compute the density data
# dens <- density(x)
# plot density
# plot(dens)
# Superpose histogram and density plot
h <- hist(x, breaks=10, col="red")
xfit <- seq(min(x), max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
x <- rnorm(20, mean=2)
# hist(x)
# Compute the density data
# dens <- density(x)
# plot density
# plot(dens)
# Superpose histogram and density plot
h <- hist(x, breaks=10, col="red")
xfit <- seq(min(x), max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
x <- rnorm(1000, mean=2)
# hist(x)
# Compute the density data
# dens <- density(x)
# plot density
# plot(dens)
# Superpose histogram and density plot
h <- hist(x, breaks=10, col="red")
xfit <- seq(min(x), max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
help("seq")
bruit <- c(54.8, 55.4, 57.7, 59.6, 60.1, 61.2, 62.0, 63.1, 63.5, 64.2, 65.2, 65.4, 65.9, 66.0, 67.6, 68.1, 69.5, 70.6, 71.5, 73.4)
summary(bruit)
quantiles(x)
quantile(x)
sd(x)
std(x)
sd(x)
var(x)
sd(x)/mean(x)*100
help(hist)
hist(bruit)
hist(bruit, right=False)
hist(bruit, right=FALSE)
hist(bruit, nclass=4)
hist(bruit, nclass=5)
hist(bruit, nclass=5)
hist(bruit, nclass=7)
hist(bruit, nclass=6)
hist(bruit, nclass=2)
hist(bruit, nclass=6)
hist(bruit, breaks=5)
hist(bruit, breaks=4)
hist(bruit, breaks=10)
help(hist)
hist(bruit, breaks=10)
hist(bruit, breaks=20)
hist(bruit, breaks=2)
hist(bruit, breaks=4)
help("nclass.Sturges")
nclass.Sturges(bruit)
hist(bruit, breaks=6)
classes <- nclass.Sturges(bruit)
hist(bruit)
hist(bruit, breaks=classes)
hist(bruit, breaks=6)
hist(bruit, breaks=seq(min(bruit), max(bruit), length=4))
hist(bruit, breaks=seq(min(bruit), max(bruit), length=5))
hist(bruit, breaks=seq(min(bruit), max(bruit), length=6))
hist(bruit, breaks=seq(min(bruit), max(bruit), length=7))
hist(bruit, breaks=seq(min(bruit), max(bruit), length=8))
hist(bruit, breaks=seq(min(bruit), max(bruit), length=6))
h
h <- hist(bruit, breaks=seq(min(bruit), max(bruit), length=4))
h
h <- hist(bruit, breaks=seq(min(bruit), max(bruit), by=(max(bruit) - min(bruit))/(length(bruit) - 1)))
hist(bruit, breaks=seq(min(bruit), max(bruit), classes))
hist(bruit, breaks=seq(min(bruit), max(bruit), classes + 1))
classes <- seq(min(bruit), max(bruit), classes + 1)
with(bruit, hist(actions[actions %in% classes], breaks=classes)
with(bruit, hist(actions[actions %in% classes], breaks=classes))
classes <- seq(min(bruit), max(bruit), classes + 1)
with(bruit, hist(actions[actions %in% classes], breaks=classes))
classes <- seq(min(bruit), max(bruit), classes)
with(bruit, hist(actions[actions %in% classes], breaks=classes))
classes <- seq(min(bruit), max(bruit), 1)
with(bruit, hist(actions[actions %in% classes], breaks=classes))
histolarg(bruit)
histolarg <- function(x, xlim=NULL, ...)
{
# nombre de donn?es
n <- length(x)
# nombre de classes (r?gle de Sturges)
if (n<12) k<-5 else k <- round(log2(n)+1)
# bornes des classes
rangex <- max(x)-min(x)
a0 <- min(x)-0.025*rangex
ak <- max(x)+0.025*rangex
bornes <- seq(a0, ak, length=k+1)
# ?tendue du trac?
if (is.null(xlim))
xlim<-c(bornes[1], bornes[k+1])
# histogramme
histx<-hist(x, prob=T, breaks=bornes, xlim=xlim, ...)
# histx
}
histolarg(bruit)
histoeff <- function(x, xlim=NULL, ...)
{
sx <- sort(x)
n <- length(x)
k <- round(log(n)/log(2)+1)
rangex <- max(x)-min(x)
breaks <- c(min(x)-0.025*rangex, quantile(x, seq(1, k-1)/k), max(x)+0.025*rangex)
col <- 0
if (is.null(xlim)) xlim<-c(breaks[1], breaks[k+1])
hist(x, breaks=breaks, col=col, xlim=xlim, probability=T, ...)
}
histoeff(bruit)
# Superpose histogram and density plot
histdens <- function(x, xlim=NULL, ...)
{
h <- hist(x, breaks=10, col="red")
xfit <- seq(min(x), max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
}
histdens(bruit)
histdens(bruit, histoeff(bruit))
histdens(bruit, histoeff(bruit))
histdens <- function(x, histogram, xlim=NULL, ...)
{
h <- histogram
xfit <- seq(min(x), max(x), length=1000)
yfit <- dnorm(xfit, mean=mean(x),sd=sd(x))
yfit <- yfit * diff(h$mids[1:2]) * length(x)
lines(xfit, yfit, col="blue", lwd=2)
}
histdens(bruit, histoeff(bruit))
histoeff(bruit)
histdens(bruit, histoeff(bruit))
histoeff(bruit)
histoeff(bruit)
histoeff <- function(x, xlim=NULL, ...)
{
sx <- sort(x)
n <- length(x)
k <- round(log(n)/log(2)+1)
rangex <- max(x)-min(x)
breaks <- c(min(x)-0.025*rangex, quantile(x, seq(1, k-1)/k), max(x)+0.025*rangex)
col <- 0
if (is.null(xlim)) xlim<-c(breaks[1], breaks[k+1])
return (hist(x, breaks=breaks, col=col, xlim=xlim, probability=T, ...))
}
histoeff(bruit)
histdens(bruit, histoeff(bruit))
histdens(bruit, histoeff(bruit))
return(hist(x, breaks=breaks, col=col, xlim=xlim, probability=T, ...))
histoeff <- function(x, xlim=NULL, ...)
{
sx <- sort(x)
n <- length(x)
k <- round(log(n)/log(2)+1)
rangex <- max(x)-min(x)
breaks <- c(min(x)-0.025*rangex, quantile(x, seq(1, k-1)/k), max(x)+0.025*rangex)
col <- 0
if (is.null(xlim)) xlim<-c(breaks[1], breaks[k+1])
return(hist(x, breaks=breaks, col=col, xlim=xlim, probability=T, ...))
}
histoeff(bruit)
histdens(bruit, histoeff(bruit))
