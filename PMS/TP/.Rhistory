replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 5)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=values, y = theta_values, fill = theta_values)) + geom_boxplot() + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.max))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 5)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 5)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=values, y = theta_values, fill = theta_values)) + geom_boxplot(notch = F) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.max))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 5)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 5)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=values, y = theta_values, fill = theta_values)) + geom_boxplot(notch = T) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.max))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 5)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 5)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=theta_values, y = values, fill = theta_values)) + geom_boxplot() + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.max))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 5)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 5)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=theta_values, y = values, fill = theta_values)) + geom_boxplot() + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=theta_values, y = values, fill = theta_values)) + geom_boxplot() + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(y = seq(100, 200, length.out = 5), x = seq(100, 200, length.out = 5)))
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=theta_values, y = values, fill = theta_values)) + geom_boxplot() + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df, aes(x=theta_values, y = values, fill = theta_values)) + geom_boxplot() + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")  + geom_point(data = data.frame(y = seq(100, 200, length.out = 5), x = seq(100, 200, length.out = 5)), aes(x=theta_values, y = values))
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")  + geom_point(data = data.frame(y = seq(100, 200, length.out = 5), x = seq(100, 200, length.out = 5)), aes(x=theta_values, y = values))
}
superposed_boxplot(confidence(20, estimateur.moments))
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(y = seq(100, 200, length.out = 5), x = seq(100, 200, length.out = 5)))
}
superposed_boxplot(confidence(20, estimateur.moments))
source('~/Documents/Projets/Ensimag/PMS/TP/code.R')
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(y = seq(100, 200, length.out = 5), x = seq(100, 200, length.out = 5)), aes(x=ind, y = values))
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(y = seq(100, 200, length.out = 5), x = seq(100, 200, length.out = 5)), aes(x=theta_values, y = values))
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values), stat = "identity") + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(y = seq(100, 200, length.out = 5), x = seq(100, 200, length.out = 5)), aes(x=theta_values, y = values))
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values), stat = "identity") + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(aes(x=theta_values(seq(100, 200, length.out = 5)), y = values(seq(100, 200, length.out = 5))))
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5), aes(x=x, y=y), color = 'red')
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5), aes(x=x, y=y), color = 'red')
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
#colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=ind, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5), aes(x=x, y=y), color = 'red')
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5), aes(x=x, y=y), color = 'red')
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5), aes(x=x, y=y), color = 'red')
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
df
str(df)
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
# colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(aes(x=ind, y = values, fill = ind)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
# colnames(df)[2] <- "theta_values"
print(colnames(df))
ggplot() + geom_boxplot(aes(x=ind, y = values, fill = ind)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot(df) + geom_boxplot(aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5)), aes(x = x, y = y), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5)), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5)), aes(x=theta_values, y = values), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5)), aes(x=df$theta_values, y = df$values), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(100, 200, length.out = 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = x = seq(1, 5)), aes(x= x, y = y), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = x = seq(1, 5)), aes(x= x, y = y), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(1, 5)), aes(x= x, y = y), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y), color = "red")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y), color = "red") + geom_line(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y))
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y), color = "red") + geom_line(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y), linetype = "dashed")
}
superposed_boxplot(confidence(20, estimateur.moments))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 5)), aes(x= x, y = y), linetype = "dashed")
}
superposed_boxplot(confidence(20, estimateur.moments))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 15)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 15)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 15)), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 15)), aes(x= x, y = y), linetype = "dashed")
}
superposed_boxplot(confidence(20, estimateur.moments))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 15)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 15)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 15)), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 15)), aes(x= x, y = y), linetype = "dashed")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 7)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 7)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 7)), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 5), y = seq(100, 200, length.out = 7)), aes(x= x, y = y), linetype = "dashed")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in seq(100, 200, length.out = 7)) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- seq(100, 200, length.out = 7)
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = seq(100, 200, length.out = 7)), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = seq(100, 200, length.out = 7)), aes(x= x, y = y), linetype = "dashed")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
seq(100, 200, length.out = 7)
round(seq(100, 200, length.out = 7))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in round(seq(100, 200, length.out = 7))) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- round(seq(100, 200, length.out = 7))
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(estimations[1]))
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
l <- confidence(20, estimateur.max_unbiaised)
str(l)
l[1]
max(l[1])
max(l[[1])
max(l[[1]])
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(estimations[[1]]))
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(estimations[[1]]), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(estimations[[1]]), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
confidence <- function(nombre_observations, estimateur) {
m <- 10000
new_list <- list()
for (theta in round(seq(100, 200, length.out = 7))) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- round(seq(100, 200, length.out = 7))
return(new_list)
}
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values)) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(estimations[[1]]), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values), outlier.shape = NA) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(estimations[[1]]), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
# Pour tracer la ligne
observations = sample(1:200, 20, replace = replace)
# Pour tracer tout le reste
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values), outlier.shape = NA) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(observations), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
# Pour tracer la ligne
observations = sample(1:200, 20, replace = F)
# Pour tracer tout le reste
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values), outlier.shape = NA) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(observations), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
# Pour tracer la ligne
observations = sample(1:120, 20, replace = F)
# Pour tracer tout le reste
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values), outlier.shape = NA) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(observations), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
# Pour tracer la ligne
observations = sample(1:120, 20, replace = F)
# Pour tracer tout le reste
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values), outlier.shape = NA) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(observations), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.max_unbiaised))
superposed_boxplot <- function(estimations) {
# Pour tracer la ligne
observations = sample(1:120, 20, replace = F)
# Pour tracer tout le reste
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values), outlier.shape = NA) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 200, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(observations), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.moments))
confidence <- function(nombre_observations, estimateur) {
m <- 5000
new_list <- list()
for (theta in round(seq(100, 160, length.out = 7))) {
estimations <-
replicate(m,
estimateur(theta, nombre_observations, replace = F))
new_list <- c(new_list, list(estimations))
}
names(new_list) <- round(seq(100, 160, length.out = 7))
return(new_list)
}
superposed_boxplot <- function(estimations) {
# Pour tracer la ligne
observations = sample(1:120, 20, replace = F)
# Pour tracer tout le reste
df <- stack(as.data.frame(do.call(cbind, estimations)))
colnames(df)[2] <- "theta_values"
ggplot() + geom_boxplot(data = df, aes(x=theta_values, y = values, fill = theta_values), outlier.shape = NA) + ylab("Estimations de theta") + xlab("Valeurs réelles de theta") + geom_point(data = data.frame(x = seq(1, 7), y = round(seq(100, 160, length.out = 7))), aes(x= x, y = y), color = "pink") + geom_line(data = data.frame(x = seq(1, 7), y = round(seq(100, 160, length.out = 7))), aes(x= x, y = y), linetype = "dashed") + geom_hline(yintercept = max(observations), color = "blue")
}
superposed_boxplot(confidence(20, estimateur.moments))
